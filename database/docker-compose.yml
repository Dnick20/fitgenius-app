version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: fitgenius-postgres
    environment:
      POSTGRES_DB: fitgenius
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: fitgenius_secure_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fitgenius-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d fitgenius"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST API Server
  postgrest:
    image: postgrest/postgrest:latest
    container_name: fitgenius-postgrest
    environment:
      PGRST_DB_URI: postgres://admin:fitgenius_secure_2024@postgres:5432/fitgenius
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: your-super-secret-jwt-key-change-in-production-minimum-256-bits
      PGRST_SERVER_PORT: 3000
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: "*"
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitgenius-network
    restart: unless-stopped

  # Real-time WebSocket Server
  realtime:
    build: ./realtime
    container_name: fitgenius-realtime
    environment:
      DATABASE_URL: postgres://admin:fitgenius_secure_2024@postgres:5432/fitgenius
      JWT_SECRET: your-super-secret-jwt-key-change-in-production-minimum-256-bits
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitgenius-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: fitgenius-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fitgenius-network
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: fitgenius-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - postgrest
      - realtime
    networks:
      - fitgenius-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fitgenius-network:
    driver: bridge